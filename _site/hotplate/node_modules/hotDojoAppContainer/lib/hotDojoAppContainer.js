
var dummy
  , path = require( 'path' )
  , hotplate = require( 'hotplate' )
  , hotCoreStoreRegistry = require('hotCoreStoreRegistry')
  , logger = require('hotCoreServerLogger');
;

// Add routes for the multiHomeURL and for appURL depending on
// hotplate's hotCoreMultiHome configuration

hotplate.hotEvents.on( 'setRoutes', function( app, done ){

  // Set the multiHome page, or the straight one
  if( hotplate.config.get('hotCoreMultiHome.enabled' ) ){
    app.get( hotplate.config.get('hotCoreMultiHome.multiHomeURL'), mainApp );
  } else {
    app.get( hotplate.config.get('hotCoreAuth.appURL'), mainApp);
  }

  done( null );
}); 

// Send the app page
// Note that workspaceId is not guaranteed to be there -- it's only there
// for multihome environments

function mainApp( req, res, next ){

  var hotCorePage = require('hotCorePage');

  // Not logged in: the user must not get this page, redirect to
  // the initial login page instead
  if( ! req.session.loggedIn ){
    res.redirect( hotplate.config.get('hotCoreAuth.redirectURLs.fail.signin') );
  }

  var extraJses = (new hotCorePage.Jses).add( 'hotDojoAppContainer', 'mainContainer.js' );
  var extraCsses = (new hotCorePage.Csses).add( 'hotDojoAppContainer', 'mainContainer.css' );
  var extraVars = new hotCorePage.Vars;

  // Add all of the fail URLs, which will be needed by Javascript
  extraVars.add( 'hotDojoAppContainer', 'failURLs', hotplate.config.get('hotCoreAuth.redirectURLs.fail') );


  // WorkspaceId is not guaranteed to be there -- it's only there for multihome setups
  if( req.params.workspaceId ){
    // extraVars.add( 'hotDojoAppContainer', 'workspaceId', req.params.workspaceId );
    hotCoreStoreRegistry.getAllStores( function( err, allStores ){
      if( err ){
        next( err );
      } else {
        allStores.stores.workspaces.Store.Get( req.params.workspaceId, function( err, record ){
          if( err ){
            next( err );
          }  else {
            restOfTheFunction();
          }
        });
      }
    });
  } else {
    restOfTheFunction();
  }
 
  function restOfTheFunction(){ 

    hotCorePage.processPageTemplate(
    {
      jses: extraJses,
      vars: extraVars,
      csses:extraCsses,
      body: '<body class="claro"><div id="appContainer"></div></body>',
    },
    req, 
    'hotDojoAppContainer/container',
    function( err, result ){ 
      if( err ){
        next( err );
        logger.log( { message: "ERROR while App container page served" } );
      } else {
        res.send( result );
        logger.log( { message: "App container page served" } );
      }
    }
    );
    return;
  }
  
}

hotplate.hotEvents.on( 'clientPaths', 'hotDojoAppContainer', function( done ){
  done( null, [ path.join( __dirname, '../client' ) ] );
})


