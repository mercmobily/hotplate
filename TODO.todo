✔ server @done(2020-08-21 07:13)
  ✔ write initial server (server directory, change 'start' in main package.json) @done(2020-08-19 07:55)
  ✔ Make sure basic open-wc app runs @done(2020-08-19 07:56)
  ✔ Add DB/session/serverstores module with prompts questions for DB setup @done(2020-08-20 09:35)
  ✔ Exit everything on ctrl-c on input (prompts) @done(2020-08-21 07:05)
✔ Change the way initial setup works @done(2020-08-21 07:34)
  ✔ Two lists: one of "super-packages", and one of "optional ones" (set in package.json) @done(2020-08-21 06:45)
  ✔ Allow multi-select for optional ones @done(2020-08-21 07:05)
  ✔ Allow positioning of modules (position field in package.json) @done(2020-08-21 07:05)
  ✔ Make it possible to add multiple modules via cmd (commander) and UI @done(2020-08-21 07:12)
  ✔ Blank out already installed packages @done(2020-08-21 07:34)
✔ Add basic client module, working with or without open-wc (tpe app with tabs) @done(2020-08-22 21:22)
  ✔ Add "fs" key to module, for file system changes, before-manipulate and after-manipulate, with ops and parameters (rename) @done(2020-08-23 07:29)
✔ Add new type of reinstallable module, for pages etc. @done(2020-12-21 20:21)
✔ Change json to json5, in order to being able to add comments -- CHANGE OF HEART @done(2020-12-27 21:07)
✔ Change "// *** -- start" into self-contained blocks /* */ @done(2020-12-28 06:38)
✔ Change PageElementMixin render function @done(21-01-04 17:23)

NOTES:
Maybe add reflect:true to routify's PageElementMixin
Watchout, taken autoload out of PageElementMixin

STAGE 1

☐ Add modules
   X client-app-frame
     X Work on PageElement, decide how to organise mixin with AppElement, PageElement and PageMixin. Turn AppElement into a mixin?
     X (ask for [x] appPrefix, [x] tpe, [X] responsiveness, [X] routify [X] dynamic loading (prompt), [X] drawer (with slot for menu button)
     X client-back-bar (historify and header, and SOME of pageMixin)

   X IMPORTANT: client-base now has config.vars.appFile =  ... in preAdd. INSTEAD, have code that runs every time regardless, even if the module is ALREADY installed.
     X Store prompt variables somewhere, and reload them as if they were answered (JSON)

   - Actually enable sessions server side, find a better way to whitelist URLs https://stackoverflow.com/questions/65492674/bypass-sessions-for-static-files-and-using-a-catchall-url-for-spa

   Reinstallable pages
   X client-app-root-page (maybe loaded dynamically, depending on flag) -- placement fine as-is

* client-app-add-tabs [PLACEMENT] -- ONLY ONE routed-pages per element

* client-app-add-page-tabs [PLACEMENT] ("use-hash passive")

X client-app-root-page
  ☐  (standard, list, view, edit)

* client-app-inner-page -- placed in any <!-- Page tab insertion point -->. Must be child of root-page, URL must beginning must match
  ☐ File position will be a directory with name of parent element
  ☐ Add import in parent element
  ☐
  ☐  (standard, list, view, edit)

* client-app-element -- placed in any <!-- Element insertion point --> or any <!-- Element tab insertion point --> (more complex, 2 insertions)
  ☐  (standard, list, view, edit)


WHERE AM I?
X Add more gathered metainfo (Mixin, title, whatever) with regex from findAnchorPoints
X Have a function that will display that info as as sentence
X Add extra sentence to prompts, and write little intro when placing element
X Rename client-app-page-tabs into client-app-element-tabs
* Create client-app-page-tabs
* Complete placement of client-app-element with prompts
* Write client-app-inner-page so that it places pages inner pages in right spot

STAGE 2

   - client-reducs

   - server-stores
   - client-server-auth
   - client-server-user-config
   - client-server-app-config

STAGE 3

  Reinstallable pages
   - server-store

   - client-store-list-element
   - client-store-view-element
   - client-store-edit-element

   - client-store-list-inner-page
   - client-store-view-inner-page
   - client-store-edit-inner-page

   - client-store-list-root-page
   - client-store-view-root-page
   - client-store-edit-root-page

INNER PAGE AND ROOT PAGE


  Less important
   - client-server-shared-code

STAGE 4

☐ Generally tidy up and improve
☐ Figure out how to change eslint rules in open-wc
☐ Document the lot as literate code
☐ Add initial docco-next documentation generation to js-kit

Testing:
rm -rf testing-app;cp -pr testing-app.START testing-app; node Development/scaffoldizer/bin/scaffoldizer add Development/js-kit testing-app


rm -rf testing-app;cp -pr testing-app.START testing-app; rm -rf testing-app/node_modules; rm -rf testing-app/server/node_modules;node Development/scaffoldizer/bin/scaffoldizer add Development/js-kit testing-app everything; cd testing-app; npm install;cd ..
