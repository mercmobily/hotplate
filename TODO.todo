✔ server @done(2020-08-21 07:13)
  ✔ write initial server (server directory, change 'start' in main package.json) @done(2020-08-19 07:55)
  ✔ Make sure basic open-wc app runs @done(2020-08-19 07:56)
  ✔ Add DB/session/serverstores module with prompts questions for DB setup @done(2020-08-20 09:35)
  ✔ Exit everything on ctrl-c on input (prompts) @done(2020-08-21 07:05)
✔ Change the way initial setup works @done(2020-08-21 07:34)
  ✔ Two lists: one of "super-packages", and one of "optional ones" (set in package.json) @done(2020-08-21 06:45)
  ✔ Allow multi-select for optional ones @done(2020-08-21 07:05)
  ✔ Allow positioning of modules (position field in package.json) @done(2020-08-21 07:05)
  ✔ Make it possible to add multiple modules via cmd (commander) and UI @done(2020-08-21 07:12)
  ✔ Blank out already installed packages @done(2020-08-21 07:34)
✔ Add basic client module, working with or without open-wc (tpe app with tabs) @done(2020-08-22 21:22)
  ✔ Add "fs" key to module, for file system changes, before-manipulate and after-manipulate, with ops and parameters (rename) @done(2020-08-23 07:29)
✔ Add new type of reinstallable module, for pages etc. @done(2020-12-21 20:21)
✔ Change json to json5, in order to being able to add comments -- CHANGE OF HEART @done(2020-12-27 21:07)
✔ Change "// *** -- start" into self-contained blocks /* */ @done(2020-12-28 06:38)
✔ Change PageElementMixin render function @done(21-01-04 17:23)
✔ Add more gathered metainfo (Mixin, title, whatever) with regex from findAnchorPoints  @done(2021-01-07 16:46)
✔ Have a function that will display that info as as sentence @done(2021-01-07 16:46)
✔ Add extra sentence to prompts, and write little intro when placing element @done(2021-01-07 16:46)
✔ Rename client-app-add-tabs into client-app-element-tabs @done(2021-01-07 16:46)
✔ Create client-app-add-page-tabs @done(2021-01-07 16:46)
✔ Complete placement of client-app-element with prompts @done(2021-01-07 16:46)
✔ Write client-app-inner-page so that it places inner pages in right spot @done(2021-01-07 16:46)
✔ Work out how to add a page either in Page Insertion Point or Page tab insertion point @done(2021-01-08 07:43)
✔ Work out how to add an element either in Element Insertion Point or Element tab insertion point @done(2021-01-08 07:43)
  ✔ HINT: write textManipulation as a function, AND findAnchorPoints() given an array, and adding anchor point to info @done(2021-01-08 07:43)
✔ REWORK things so that postAdd is not used for extra prompts, use prepRompts instead (doh) @done(2021-01-09 10:49)
✔ Finish client-app-inner-pages @done(2021-01-09 15:34)
  ✔ Add URL info to js-kit/utils/getFileInfo @done(2021-01-09 11:27)
  ✔ Ask for path RELATIVE to the path above @done(2021-01-09 11:27)
✔ Split findAnchorPoints so that there is a generic one from scaffoldizer and a specific super-short one for js-kit @done(2021-01-10 06:06)
✔ Harmonise API so that config is always at the beginning @done(2021-01-10 06:37)
✔ Allow to add elements in a "elements" subdirectory under the element itself @done(2021-01-10 09:03)
✔ Check that element doesn't exist already @done(2021-01-10 10:43)
✔ Check that element path is not already set @done(2021-01-10 11:47)
✔ Force names for add/list/view elements @done(2021-01-12 07:58)
✔ Check that it still all works (and check headers are off in inner-pages) @done(2021-01-12 11:06)
  ✔ routed-element (cloned from inner-page, adding a 'routedElement' element to the tab) @done(2021-01-13 06:28)
  ✔ NOT DONE - inner-page (as is, but taking tab placement out) @done(2021-01-13 06:45)
  ✔ add-element-tabs -- (renaming add-tabs). NOTE: app-element will add to it @done(2021-01-13 06:10)
  ✔ add-routed-element-tabs (renaming add-page-tabs, normal ee-tab but "passive") @done(2021-01-13 06:45)
  ✔ NOT DONE add-routed-element-stack? (future) @done(2021-01-13 06:47)
✔ Make js-kit work as a standalone program @done(2021-01-14 07:44)
✔ Change order of parameters is stock scaffoldizer https://stackoverflow.com/questions/4351521/how-do-i-pass-command-line-arguments-to-a-node-js-program @done(2021-01-15 08:44)
✔ Add eslint to frame @done(2021-01-15 09:17)
✔ Make sure it still works if app name doesn't have a "-" by adding 'main' @done(2021-01-15 10:13)
✔ Make sure that result app is fully linted @done(2021-01-15 13:21)
☐ Add full hooks (same as plain-PREFIX-ELEMENTNAME) to PREFIX-landing, PREFIX-load-error, PREFIX-not-found
  ☐ Could this be done programmatically?

☐ Add server stores (server-add-store) (simple version)
☐ Add way to run scripts -- use to create databases (picking store)

☐ (With Raphael) Add edit/list/view elements
☐ (With Raphael) Decide what to do for initial default tabs
☐ --- STAGE 2 DONE ---
☐ client-reducs
☐ clientserver-auth
☐ clientserver-user-config
☐ clientserver-app-config
☐ Look for a different server to serve files rather than open-wc's https://www.npmjs.com/package/es6-module-server
--- STAGE 3 DONE
☐ Document the lot as literate code
☐ Add initial docco-next documentation generation to js-kit
☐ --- STAGE 4 DONE
☐ Maybe add reflect:true to routify's PageElementMixin
☐ Watchout, taken autoload out of PageElementMixin
☐ Add module to build (rollup config)


Testing:
rm -rf testing-app;cp -pr testing-app.START testing-app; node Development/scaffoldizer/bin/scaffoldizer add Development/js-kit testing-app


rm -rf testing-app;cp -pr testing-app.START testing-app; rm -rf testing-app/node_modules; rm -rf testing-app/server/node_modules;node Development/scaffoldizer/bin/scaffoldizer add Development/js-kit testing-app everything; cd testing-app; npm install;cd ..
