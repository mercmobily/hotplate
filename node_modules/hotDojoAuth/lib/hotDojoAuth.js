"use strict";

var dummy
  , hotplate = require('hotplate')
  , path = require('path')

  , hotCoreStoreRegistry = require('hotCoreStoreRegistry')
  , logger = require('hotCoreServerLogger')
  , hotCorePage = require('hotCorePage')

  , hotDojoWidgets = require('hotDojoWidgets') // CLIENT
  , hotDojoSubmit = require('hotDojoSubmit')  // CLIENT
  , hotDojoStores = require('hotDojoStores') // CLIENT
  , hotDojoGlobals = require('hotDojoGlobals')  // CLIENT
;

hotplate.hotEvents.on( 'setRoutes', hotplate.cachable( function( app, done ){

   // Pages
  app.get(  path.join( hotplate.config.get( 'hotplate.routeUrlsPrefix' ), '/auth/welcome' ) , pageWelcome);
  app.get(  path.join( hotplate.config.get( 'hotplate.routeUrlsPrefix' ), '/auth/pick' ) , pagePick );

  done( null );
}));

hotplate.hotEvents.on( 'clientPath', 'hotDojoAuth', function( done ){
  done( null, path.join(__dirname, '../client') );
})


hotplate.hotEvents.on( 'pageElements', 'hotDojoAuth', function( done ){
  done( null, { csses: [ 'auth.css' ] } );
});


hotplate.hotEvents.on( 'dojoModulesPerPage', 'hotDojoAuth', function( req, pageName, done ){

  switch( pageName ){

    case 'hotDojoAuth/Welcome':
      done( null, [ 'mainWelcome' ] );
    break;

    case 'hotDojoAuth/Pick':
      done( null, [ 'mainPick' ] );
    break;

    default:
      done( null, [] );
    break;
  }

});


var pageWelcome = function(req, res, next){

  req.session =  {};

  // CASE #1: The user IS NOT logged in. Show the straight login form,
  //          after setting the right variables
  if(! req.session.loggedIn){

    hotCorePage.processPageTemplate(
      {
        csses: (new hotCorePage.Csses() ).add('hotDojoAuth', 'welcome.css'),
        bodyLines: (new hotCorePage.BodyLines() ).add( 'hotDojoAuth', '<div data-dojo-type="hotplate/hotDojoAuth/Welcome" id="welcome"></div>' ),
      },
      req,
      'hotDojoAuth/Welcome',
      function( err, result ){
        if( err ){
          next( err );
        } else {
          res.send( result );
          logger.log( { message: "Welcome page served" } );
        }
      }
    );
    return;
  }

  // CASE #2: The user IS logged in. Redirect to pick()
  if( req.session.userId ){
    res.redirect('/pages/pick');
  }

};

var pagePick = function( req, res, next ){

  if( req.session.loggedIn){

    var allStores = hotCoreStoreRegistry.getAllStores( function( err, allStores ){

      allStores.usersWorkspaces.apiGetQuery( { conditions: { userId: req.session.userId  }  }, function( err, records ){
        if( err ){
          next( err );
        }  else {
        
          // To escape picking, there needs to be exactly 1 workspace AND escapePick needs to be true
          if( records.length !== 1 || ! hotplate.config.get( 'hotCoreMultiHome.escapePick' ) ){
            returnThePage();

          // OK, escape successful! Get the application URL and jump there
          } else {
            var applicationURL = hotplate.config.get( 'hotCoreMultiHome.multiHomeURL' );
            applicationURL = applicationURL.replace( ':workspaceId', records[0].workspaceId );
            res.redirect( applicationURL );
          } 
        }
      });
      
   
      function returnThePage(){

        hotCorePage.processPageTemplate(
          {
            csses: (new hotCorePage.Csses() ).add( 'hotDojoAuth', 'pick.css' ),
            vars: (new hotCorePage.Vars() ).add( 'hotDojoAuth', 'pick.css' ),
            bodyLines: (new hotCorePage.BodyLines() ).add( 'hotDojoAuth', '<div data-dojo-type="hotplate/hotDojoAuth/Pick" id="pick">' ),
          },
          req,
          'hotDojoAuth/Pick',
          function( err, result ){
            if( err ){
              next( err );
            } else {
              res.send( result );
              logger.log( { message: "Pick page served" } );
            }
          }
        );
        return;
      }
    });

  } else {

    var redirectURLs = hotplate.config.get( 'hotCoreAuth.redirectURLs.fail' );
    var redirectURL = redirectURLs[ 'signin' ] || '/' ;
    res.redirect( redirectURL );

  }

};

