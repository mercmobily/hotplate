"use strict";
/*!
 * Module dependencies.
 */

var dummy
  , path = require('path')
  , hotplate = require('hotplate')
  , hotCoreStoreRegistry = require('hotCoreStoreRegistry')
;

hotplate.hotEvents.onCollect('pageElements', 'hotCoreStoreVars', hotplate.cachable( function( done ){

  var storesVarsData = {};
  //var storesPerCollection = {};

  hotCoreStoreRegistry.getAllStores( function( err, allStores ){

    Object.keys( allStores ).forEach( function( storeName ){
      var store = allStores[ storeName ];

      if( store.publicURL && store.hotExpose ){
        var url = path.join( hotplate.config.get( 'hotCoreStoreExposer.storesUrlsPrefix' ), store.publicURL );
        storesVarsData[ store.storeName ] = { 
          target: url,
          sortParam: 'sortBy',
          alsoNotify: store.alsoNotify,
          enabledField: store.enabledField,
          defaultNewToStart: store.defaultNewToStart,
          preserveCacheOnReset: !!store.preserveCacheOnReset,
          alwaysRefreshOnChange: store.alwaysRefreshOnChange,
          type: store.type ? store.type : 'cached',      
        };
        if( store.collectionName ) storesVarsData[ store.storeName ].collectionName = store.collectionName;
        if( store.nested ) storesVarsData[ store.storeName ].nested = simplify( store.nested );

        //storesPerCollection[ store.collectionName ] = storesPerCollection[ store.collectionName ] || [];
        //storesPerCollection[ store.collectionName ].push( store.storeName );
      }
    });
  });


  done( null, { vars: [
    { name: 'stores', value: storesVarsData },
    //{ name: 'storesPerCollection', value: storesPerCollection }
  ]});

}));

function simplify( storeNested ){
  var newNested = [];
  storeNested.forEach( function( n ){
    var collectionName = n.layer.table;
    newNested.push( {
      layer: collectionName,
      type: n.type,
    });
  })
  return newNested;
}
